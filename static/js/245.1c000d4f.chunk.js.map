{"version":3,"file":"static/js/245.1c000d4f.chunk.js","mappings":"6LACA,G,QAA0B,0BAA1B,EAAoE,gCAApE,EAAmH,8BAAnH,EAA0J,wBAA1J,EAA+L,4BAA/L,EAA2O,+BAA3O,EAAqR,0BAArR,EAAyT,yB,6ECS5SA,EAA8C,SAAHC,GAAoB,IAAfC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACzDC,EAAO,YAAcF,EACzB,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAY,IAAMA,EAASC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAiBC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EACXG,IAAKC,EAAaC,IAAKT,OAEhCM,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,UAC5BC,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAAEC,GAAIV,EAAKI,SAAEL,QAIrC,EChBaY,EAAgD,SAAHd,GAAmB,IAAde,EAAOf,EAAPe,QAC3D,OACIP,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAUC,SAAEQ,GAEpC,E,uCCVA,EAAsB,4BCShBC,GAAeC,EAAAA,EAAAA,GAAiB,KAgBzBC,GAAsBC,EAAAA,EAAAA,GAA8B,CAACC,KAAM,sBAArCD,EAdqC,SAAHnB,GAAwB,IAAnBqB,EAAYrB,EAAZqB,aACtE,OACIjB,EAAAA,EAAAA,MAAA,QAAMkB,SAAUD,EAAad,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CAACC,YAAa,qBAAsBC,UAAWC,EAAAA,GAAUxB,KAAM,iBAC9DyB,SAAU,CAACC,EAAAA,EAAUZ,QAEhCR,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAMC,SAAC,qBAI1C,I,UCWA,GAAesB,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAfpB,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAE2B,SAACC,GACxB,MAAO,CACHC,mBAAoB,SAACC,GACjBF,GAASC,EAAAA,EAAAA,GAAmBC,GAChC,EAGR,IAE0FC,EAAAA,GAAYC,EAAAA,EAAtG,EC5BmD,SAAHrC,GAA2C,IAAtCgC,EAAWhC,EAAXgC,YAAaE,EAAkBlC,EAAlBkC,mBACxDI,EAAkBN,EAAYO,QAAQC,KAAI,SAACC,GAAC,OAAKjC,EAAAA,EAAAA,KAACT,EAAW,CAAYG,KAAMuC,EAAEvC,KAAMD,GAAIwC,EAAExC,IAA1BwC,EAAExC,GAA6B,IAClGyC,EAAmBV,EAAYW,SAASH,KAAI,SAACI,GAAC,OAAKpC,EAAAA,EAAAA,KAACM,EAAY,CAAYC,QAAS6B,EAAE7B,SAAjB6B,EAAE3C,GAAyB,IAMvG,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAUC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,SAC1B+B,KAELlC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAWC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAAD,SAAMmC,KACNlC,EAAAA,EAAAA,KAACU,EAAmB,CAACI,SAXX,SAACuB,GACnBX,EAAmBW,EAAOV,eAC9B,SAaJ,G","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/MessageItem/MessageItem.tsx","webpack://my-app/./src/components/Dialogs/DialogsForm/AddMessageForm.module.css?6574","components/Dialogs/DialogsForm/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__yJMMT\",\"dialogsContent\":\"Dialogs_dialogsContent__TyUCF\",\"dialogs_item\":\"Dialogs_dialogs_item__0rpHk\",\"active\":\"Dialogs_active__oXo76\",\"dialogsImg\":\"Dialogs_dialogsImg__7ualt\",\"nameContainer\":\"Dialogs_nameContainer__yKQ12\",\"messages\":\"Dialogs_messages__rHnDt\",\"message\":\"Dialogs_message__6LvXz\"};","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport userDialogs from './../../../assets/images/userDialogs.png'\r\n\r\nexport type DialogItemsPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItems: React.FC<DialogItemsPropsType> = ({id, name}) => {\r\n    let path = '/dialogs1' + id\r\n    return (\r\n        <div className={s.dialogs + ' ' + s.active}>\r\n            <div className={s.dialogsContent}>\r\n                <img className={s.dialogsImg}\r\n                     src={userDialogs} alt={name}/>\r\n            </div>\r\n            <div className={s.nameContainer}>\r\n                <NavLink  to={path}>{name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type MessagesItemPropsType = {\r\n    message: string\r\n}\r\n\r\nexport const MessagesItem: React.FC<MessagesItemPropsType> = ({message}) => {\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"AddMessageForm_btn__N1wIH\"};","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"utils/validators/validators.js\";\r\nimport s from './AddMessageForm.module.css'\r\n\r\nexport type AddMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Enter your message'} component={TextArea} name={'newMessageBody'}\r\n                       validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <button className={s.btn}>SEND MESSAGE</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm<AddMessageFormType>({form: 'dialogsMessageForm'})(AddMessageForm)\r\n","import React from \"react\";\r\nimport {sendMessageCreator, StateDialogsType} from \"components/redux/reducer/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchPropsType\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: StateDialogsType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessageCreator: (newMessageBody: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        sendMessageCreator: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps), withRouter, withAuthRedirect)(Dialogs)\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport {DialogItems} from \"./DialogItems/DialogItems\";\r\nimport {MessagesItem} from \"./MessageItem/MessageItem\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageFormRedux, AddMessageFormType} from \"./DialogsForm/AddMessageForm\";\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = ({dialogsPage, sendMessageCreator}) => {\r\n    const dialogsElements = dialogsPage.dialogs.map((d) => <DialogItems key={d.id} name={d.name} id={d.id}/>)\r\n    const messagesElements = dialogsPage.messages.map((m) => <MessagesItem key={m.id} message={m.message}/>)\r\n\r\n    const addNewMessage = (values: AddMessageFormType) => {\r\n        sendMessageCreator(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_item}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"names":["DialogItems","_ref","id","name","path","_jsxs","className","s","children","_jsx","src","userDialogs","alt","NavLink","to","MessagesItem","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","TextArea","validate","required","compose","connect","state","dialogsPage","dispatch","sendMessageCreator","newMessageBody","withRouter","withAuthRedirect","dialogsElements","dialogs","map","d","messagesElements","messages","m","values"],"sourceRoot":""}